/**
 *
 * @author Himanshu Sajwan.
 */
package hStegnography;

import javax.swing.ImageIcon;

public class HowToUse extends javax.swing.JFrame {

    /**
     * Creates new form Help
     */
    public HowToUse() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        TabbedPane = new javax.swing.JTabbedPane();
        OpenImageScrollPane = new javax.swing.JScrollPane();
        OpenImagePanel = new javax.swing.JPanel();
        OpenImageLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        OpenImageLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ALabel = new javax.swing.JLabel();
        CLabel = new javax.swing.JLabel();
        OpenImageLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BLabel = new javax.swing.JLabel();
        HowToOpenImageLabel = new javax.swing.JLabel();
        MessageScrollPane = new javax.swing.JScrollPane();
        MessagePanel = new javax.swing.JPanel();
        HowToMessageLabel = new javax.swing.JLabel();
        ALabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        OpenImageLabel4 = new javax.swing.JLabel();
        ALabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        OpenImageLabel5 = new javax.swing.JLabel();
        OpenImageLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ALabel3 = new javax.swing.JLabel();
        OpenImageLabel7 = new javax.swing.JLabel();
        OpenImageLabel8 = new javax.swing.JLabel();
        KeyScrollPane = new javax.swing.JScrollPane();
        KeyPanel = new javax.swing.JPanel();
        HowToMessageLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ALabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        OpenImageLabel9 = new javax.swing.JLabel();
        OpenImageLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        ALabel5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        EncodeImageScrollPane = new javax.swing.JScrollPane();
        EncodeImagePanel = new javax.swing.JPanel();
        HowToMessageLabel2 = new javax.swing.JLabel();
        ALabel6 = new javax.swing.JLabel();
        OpenImageLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        OpenImageLabel12 = new javax.swing.JLabel();
        ALabel7 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        OpenImageLabel13 = new javax.swing.JLabel();
        ALabel8 = new javax.swing.JLabel();
        DecodeImageScrollPane = new javax.swing.JScrollPane();
        DecodeImagePanel = new javax.swing.JPanel();
        HowToMessageLabel3 = new javax.swing.JLabel();
        ALabel9 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        OpenImageLabel14 = new javax.swing.JLabel();
        OpenImageLabel15 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        BLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        BLabel2 = new javax.swing.JLabel();
        OpenImageLabel16 = new javax.swing.JLabel();
        OpenImageLabel17 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        OpenImageLabel18 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        OpenImageLabel19 = new javax.swing.JLabel();
        HowToUseLabel = new javax.swing.JLabel();
        BackgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        MainPanel.setLayout(null);

        TabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        TabbedPane.setMinimumSize(new java.awt.Dimension(143, 105));
        TabbedPane.setPreferredSize(new java.awt.Dimension(200, 200));

        OpenImagePanel.setBackground(new java.awt.Color(255, 204, 204));
        OpenImagePanel.setPreferredSize(new java.awt.Dimension(920, 2600));
        OpenImagePanel.setLayout(null);

        OpenImageLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Opened_Image.png"))); // NOI18N
        OpenImagePanel.add(OpenImageLabel1);
        OpenImageLabel1.setBounds(90, 1890, 820, 660);

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel2.setText("You can open Image by:");
        OpenImagePanel.add(jLabel2);
        jLabel2.setBounds(80, 140, 590, 40);

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel4.setText("1: Selecting File -> Open Image");
        OpenImagePanel.add(jLabel4);
        jLabel4.setBounds(80, 190, 470, 30);

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel5.setText("3: Clicking Open Button");
        OpenImagePanel.add(jLabel5);
        jLabel5.setBounds(80, 250, 350, 30);

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel6.setText("2: Short key: Ctrl+O");
        OpenImagePanel.add(jLabel6);
        jLabel6.setBounds(80, 220, 350, 30);

        OpenImageLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Open_Image_Encode.PNG"))); // NOI18N
        OpenImagePanel.add(OpenImageLabel2);
        OpenImageLabel2.setBounds(80, 280, 820, 660);

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel3.setText("Selected Image will be visible in Image Label.");
        OpenImagePanel.add(jLabel3);
        jLabel3.setBounds(90, 1850, 550, 40);

        ALabel.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel.setText("A");
        OpenImagePanel.add(ALabel);
        ALabel.setBounds(40, 110, 40, 40);

        CLabel.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        CLabel.setText("C");
        OpenImagePanel.add(CLabel);
        CLabel.setBounds(50, 1820, 40, 40);

        OpenImageLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Selcted_Image_To_Open.png"))); // NOI18N
        OpenImagePanel.add(OpenImageLabel3);
        OpenImageLabel3.setBounds(90, 1090, 820, 660);

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel7.setText("Select Image to Open.");
        OpenImagePanel.add(jLabel7);
        jLabel7.setBounds(90, 1050, 460, 40);

        BLabel.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        BLabel.setText("B");
        OpenImagePanel.add(BLabel);
        BLabel.setBounds(50, 1020, 40, 40);

        HowToOpenImageLabel.setBackground(new java.awt.Color(255, 0, 0));
        HowToOpenImageLabel.setFont(new java.awt.Font("Consolas", 1, 40)); // NOI18N
        HowToOpenImageLabel.setForeground(new java.awt.Color(255, 0, 0));
        HowToOpenImageLabel.setText("How to Open Image");
        OpenImagePanel.add(HowToOpenImageLabel);
        HowToOpenImageLabel.setBounds(80, 20, 720, 60);

        OpenImageScrollPane.setViewportView(OpenImagePanel);

        TabbedPane.addTab("Open Image", OpenImageScrollPane);

        MessagePanel.setBackground(new java.awt.Color(204, 204, 255));
        MessagePanel.setPreferredSize(new java.awt.Dimension(920, 3890));
        MessagePanel.setLayout(null);

        HowToMessageLabel.setBackground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel.setFont(new java.awt.Font("Consolas", 1, 40)); // NOI18N
        HowToMessageLabel.setForeground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel.setText("How to Message");
        MessagePanel.add(HowToMessageLabel);
        HowToMessageLabel.setBounds(80, 20, 720, 60);

        ALabel1.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel1.setText("A");
        MessagePanel.add(ALabel1);
        ALabel1.setBounds(40, 110, 40, 40);

        jLabel8.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel8.setText("You can Directly write Message in Message Area.");
        MessagePanel.add(jLabel8);
        jLabel8.setBounds(80, 140, 590, 40);

        OpenImageLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Written_Message.png"))); // NOI18N
        MessagePanel.add(OpenImageLabel4);
        OpenImageLabel4.setBounds(80, 190, 820, 660);

        ALabel2.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel2.setText("B");
        MessagePanel.add(ALabel2);
        ALabel2.setBounds(40, 910, 40, 40);

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel9.setText("You can Read Message from a text file.");
        MessagePanel.add(jLabel9);
        jLabel9.setBounds(80, 940, 590, 40);

        OpenImageLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Selected_Message_File.png"))); // NOI18N
        MessagePanel.add(OpenImageLabel5);
        OpenImageLabel5.setBounds(80, 990, 820, 660);

        OpenImageLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Message_File_Saved.png"))); // NOI18N
        MessagePanel.add(OpenImageLabel6);
        OpenImageLabel6.setBounds(70, 3180, 820, 660);

        jLabel10.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel10.setText("You can also Save your written message into a text file for later use.");
        MessagePanel.add(jLabel10);
        jLabel10.setBounds(70, 2430, 800, 40);

        ALabel3.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel3.setText("C");
        MessagePanel.add(ALabel3);
        ALabel3.setBounds(30, 2400, 40, 40);

        OpenImageLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Message_Read.png"))); // NOI18N
        MessagePanel.add(OpenImageLabel7);
        OpenImageLabel7.setBounds(80, 1680, 820, 660);

        OpenImageLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Save_Message_to_File.png"))); // NOI18N
        MessagePanel.add(OpenImageLabel8);
        OpenImageLabel8.setBounds(70, 2470, 820, 660);

        MessageScrollPane.setViewportView(MessagePanel);

        TabbedPane.addTab("Message", MessageScrollPane);

        KeyPanel.setBackground(new java.awt.Color(204, 186, 26));
        KeyPanel.setPreferredSize(new java.awt.Dimension(920, 1890));
        KeyPanel.setLayout(null);

        HowToMessageLabel1.setBackground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel1.setFont(new java.awt.Font("Consolas", 1, 40)); // NOI18N
        HowToMessageLabel1.setForeground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel1.setText("How to Add Key");
        KeyPanel.add(HowToMessageLabel1);
        HowToMessageLabel1.setBounds(80, 20, 720, 60);

        jLabel11.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel11.setText("<html> <pre>   Key is used to prvent unauthorized access to your hidden message,  even if they somehow obtain your secret image  they cannot access its hidden message.  </pre> </html>");
        KeyPanel.add(jLabel11);
        jLabel11.setBounds(70, 80, 920, 110);

        ALabel4.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel4.setText("A");
        KeyPanel.add(ALabel4);
        ALabel4.setBounds(60, 210, 40, 40);

        jLabel12.setFont(new java.awt.Font("Consolas", 0, 25)); // NOI18N
        jLabel12.setText("You can insert key using:");
        KeyPanel.add(jLabel12);
        jLabel12.setBounds(100, 230, 590, 40);

        OpenImageLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Key_Selection.png"))); // NOI18N
        KeyPanel.add(OpenImageLabel9);
        OpenImageLabel9.setBounds(100, 390, 820, 660);

        OpenImageLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Input_Key.png"))); // NOI18N
        KeyPanel.add(OpenImageLabel10);
        OpenImageLabel10.setBounds(100, 1180, 820, 660);

        jLabel13.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel13.setText("1: Selecting File -> Key");
        KeyPanel.add(jLabel13);
        jLabel13.setBounds(100, 280, 470, 30);

        jLabel14.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel14.setText("3: When you try to Encode image it will automatically ask for a Key.");
        KeyPanel.add(jLabel14);
        jLabel14.setBounds(100, 360, 800, 30);

        jLabel15.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel15.setText("2: Short key: Ctrl+K");
        KeyPanel.add(jLabel15);
        jLabel15.setBounds(100, 320, 350, 30);

        ALabel5.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel5.setText("B");
        KeyPanel.add(ALabel5);
        ALabel5.setBounds(60, 1120, 40, 40);

        jLabel16.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel16.setText("Input a valid Key: greater than 0 and less than 2147483648. ");
        KeyPanel.add(jLabel16);
        jLabel16.setBounds(100, 1150, 670, 30);

        KeyScrollPane.setViewportView(KeyPanel);

        TabbedPane.addTab("Key", KeyScrollPane);

        EncodeImagePanel.setBackground(new java.awt.Color(204, 255, 204));
        EncodeImagePanel.setPreferredSize(new java.awt.Dimension(920, 2650));
        EncodeImagePanel.setLayout(null);

        HowToMessageLabel2.setBackground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel2.setFont(new java.awt.Font("Consolas", 1, 40)); // NOI18N
        HowToMessageLabel2.setForeground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel2.setText("How to Encode Image");
        EncodeImagePanel.add(HowToMessageLabel2);
        HowToMessageLabel2.setBounds(80, 20, 720, 60);

        ALabel6.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel6.setText("A");
        EncodeImagePanel.add(ALabel6);
        ALabel6.setBounds(40, 210, 40, 40);

        OpenImageLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Save_Encode_Image.png"))); // NOI18N
        EncodeImagePanel.add(OpenImageLabel11);
        OpenImageLabel11.setBounds(80, 1180, 820, 660);

        jLabel18.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel18.setText("<html>\n<pre>\nAfter opening cover Image, Writting Message and Adding Key \nyou can Encode the Image using:\n</pre>\n<html>");
        EncodeImagePanel.add(jLabel18);
        jLabel18.setBounds(80, 100, 810, 80);

        jLabel19.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel19.setText("1: Selecting File -> Encode");
        EncodeImagePanel.add(jLabel19);
        jLabel19.setBounds(80, 240, 470, 30);

        jLabel20.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel20.setText("2: Short key: Ctrl+E");
        EncodeImagePanel.add(jLabel20);
        jLabel20.setBounds(80, 270, 350, 30);

        jLabel21.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel21.setText("3: Clicking Encode Button");
        EncodeImagePanel.add(jLabel21);
        jLabel21.setBounds(80, 300, 350, 30);

        OpenImageLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Encode_Image.png"))); // NOI18N
        EncodeImagePanel.add(OpenImageLabel12);
        OpenImageLabel12.setBounds(80, 350, 820, 660);

        ALabel7.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel7.setText("B");
        EncodeImagePanel.add(ALabel7);
        ALabel7.setBounds(40, 1090, 40, 40);

        jLabel22.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel22.setText("you can save image in PNG or BMP format.");
        EncodeImagePanel.add(jLabel22);
        jLabel22.setBounds(80, 1150, 470, 30);

        jLabel23.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel23.setText("Select Save location and write File Name");
        EncodeImagePanel.add(jLabel23);
        jLabel23.setBounds(80, 1120, 470, 30);

        jLabel24.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel24.setText("If everything is good a successful message will be displayed.");
        EncodeImagePanel.add(jLabel24);
        jLabel24.setBounds(70, 1920, 730, 30);

        OpenImageLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Successfully_Encoded.png"))); // NOI18N
        EncodeImagePanel.add(OpenImageLabel13);
        OpenImageLabel13.setBounds(70, 1950, 820, 660);

        ALabel8.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel8.setText("C");
        EncodeImagePanel.add(ALabel8);
        ALabel8.setBounds(30, 1890, 40, 40);

        EncodeImageScrollPane.setViewportView(EncodeImagePanel);

        TabbedPane.addTab("Encode Image", EncodeImageScrollPane);

        DecodeImagePanel.setBackground(new java.awt.Color(204, 255, 255));
        DecodeImagePanel.setPreferredSize(new java.awt.Dimension(920, 4915));
        DecodeImagePanel.setLayout(null);

        HowToMessageLabel3.setBackground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel3.setFont(new java.awt.Font("Consolas", 1, 40)); // NOI18N
        HowToMessageLabel3.setForeground(new java.awt.Color(255, 0, 0));
        HowToMessageLabel3.setText("How to Decode Image");
        DecodeImagePanel.add(HowToMessageLabel3);
        HowToMessageLabel3.setBounds(80, 20, 720, 60);

        ALabel9.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        ALabel9.setText("A");
        DecodeImagePanel.add(ALabel9);
        ALabel9.setBounds(40, 210, 40, 40);

        jLabel25.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel25.setText("<html> <pre> After Encoding Image with secret Message  you can send the image to someone along with the key. </pre> <html>");
        DecodeImagePanel.add(jLabel25);
        jLabel25.setBounds(80, 100, 810, 80);

        jLabel26.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel26.setText("You can Decode image for reading secret Message by: ");
        DecodeImagePanel.add(jLabel26);
        jLabel26.setBounds(80, 200, 610, 30);

        jLabel27.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel27.setText("2: Short key: Ctrl+D");
        DecodeImagePanel.add(jLabel27);
        jLabel27.setBounds(80, 270, 350, 30);

        jLabel28.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel28.setText("3: Clicking Decode Button");
        DecodeImagePanel.add(jLabel28);
        jLabel28.setBounds(80, 300, 350, 30);

        OpenImageLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Decode_Image.png"))); // NOI18N
        DecodeImagePanel.add(OpenImageLabel14);
        OpenImageLabel14.setBounds(80, 350, 820, 660);

        OpenImageLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Open_Image_Decode.png"))); // NOI18N
        DecodeImagePanel.add(OpenImageLabel15);
        OpenImageLabel15.setBounds(80, 1180, 820, 660);

        jLabel31.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel31.setText("1: Selecting File -> Decode");
        DecodeImagePanel.add(jLabel31);
        jLabel31.setBounds(80, 240, 470, 30);

        BLabel1.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        BLabel1.setText("B");
        DecodeImagePanel.add(BLabel1);
        BLabel1.setBounds(40, 1110, 40, 40);

        jLabel17.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel17.setText("Select Image to Open.");
        DecodeImagePanel.add(jLabel17);
        jLabel17.setBounds(80, 1140, 460, 40);

        jLabel29.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel29.setText("If input Key is valid a successful message will be displayed.");
        DecodeImagePanel.add(jLabel29);
        jLabel29.setBounds(80, 2670, 740, 40);

        BLabel2.setFont(new java.awt.Font("Consolas", 1, 25)); // NOI18N
        BLabel2.setText("C");
        DecodeImagePanel.add(BLabel2);
        BLabel2.setBounds(40, 1900, 40, 40);

        OpenImageLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Message_Decoded.png"))); // NOI18N
        DecodeImagePanel.add(OpenImageLabel16);
        OpenImageLabel16.setBounds(80, 2710, 820, 660);

        OpenImageLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Input_Decoding_Key.png"))); // NOI18N
        DecodeImagePanel.add(OpenImageLabel17);
        OpenImageLabel17.setBounds(80, 1970, 820, 660);

        jLabel30.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel30.setText("Input Key to Unlock hidden Message.");
        DecodeImagePanel.add(jLabel30);
        jLabel30.setBounds(80, 1930, 460, 40);

        jLabel32.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel32.setText("Decoded Message.");
        DecodeImagePanel.add(jLabel32);
        jLabel32.setBounds(80, 3420, 740, 40);

        OpenImageLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Decode_Message.png"))); // NOI18N
        DecodeImagePanel.add(OpenImageLabel18);
        OpenImageLabel18.setBounds(80, 3460, 820, 660);

        jLabel33.setFont(new java.awt.Font("Consolas", 0, 20)); // NOI18N
        jLabel33.setText("If input Key is invalid a Error message will be displayed.");
        DecodeImagePanel.add(jLabel33);
        jLabel33.setBounds(80, 4170, 740, 40);

        OpenImageLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/Invalid_Key_Error.png"))); // NOI18N
        DecodeImagePanel.add(OpenImageLabel19);
        OpenImageLabel19.setBounds(80, 4210, 820, 660);

        DecodeImageScrollPane.setViewportView(DecodeImagePanel);

        TabbedPane.addTab("Decode Image", DecodeImageScrollPane);

        MainPanel.add(TabbedPane);
        TabbedPane.setBounds(0, 80, 1100, 640);

        HowToUseLabel.setBackground(new java.awt.Color(255, 0, 0));
        HowToUseLabel.setFont(new java.awt.Font("Consolas", 0, 50)); // NOI18N
        HowToUseLabel.setForeground(new java.awt.Color(153, 255, 255));
        HowToUseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HowToUseLabel.setText("How to Use");
        MainPanel.add(HowToUseLabel);
        HowToUseLabel.setBounds(0, 0, 890, 80);

        BackgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hStegnography/image/How_To_Use_Background_Image.jpg"))); // NOI18N
        MainPanel.add(BackgroundImageLabel);
        BackgroundImageLabel.setBounds(0, 0, 1366, 768);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1116, 758));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setIcon() {
        setIconImage(new ImageIcon(getClass().getResource("/hStegnography/image/Stego_Icon.PNG")).getImage());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HowToUse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HowToUse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HowToUse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HowToUse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HowToUse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ALabel;
    private javax.swing.JLabel ALabel1;
    private javax.swing.JLabel ALabel2;
    private javax.swing.JLabel ALabel3;
    private javax.swing.JLabel ALabel4;
    private javax.swing.JLabel ALabel5;
    private javax.swing.JLabel ALabel6;
    private javax.swing.JLabel ALabel7;
    private javax.swing.JLabel ALabel8;
    private javax.swing.JLabel ALabel9;
    private javax.swing.JLabel BLabel;
    private javax.swing.JLabel BLabel1;
    private javax.swing.JLabel BLabel2;
    private javax.swing.JLabel BackgroundImageLabel;
    private javax.swing.JLabel CLabel;
    private javax.swing.JPanel DecodeImagePanel;
    private javax.swing.JScrollPane DecodeImageScrollPane;
    private javax.swing.JPanel EncodeImagePanel;
    private javax.swing.JScrollPane EncodeImageScrollPane;
    private javax.swing.JLabel HowToMessageLabel;
    private javax.swing.JLabel HowToMessageLabel1;
    private javax.swing.JLabel HowToMessageLabel2;
    private javax.swing.JLabel HowToMessageLabel3;
    private javax.swing.JLabel HowToOpenImageLabel;
    private javax.swing.JLabel HowToUseLabel;
    private javax.swing.JPanel KeyPanel;
    private javax.swing.JScrollPane KeyScrollPane;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel MessagePanel;
    private javax.swing.JScrollPane MessageScrollPane;
    private javax.swing.JLabel OpenImageLabel1;
    private javax.swing.JLabel OpenImageLabel10;
    private javax.swing.JLabel OpenImageLabel11;
    private javax.swing.JLabel OpenImageLabel12;
    private javax.swing.JLabel OpenImageLabel13;
    private javax.swing.JLabel OpenImageLabel14;
    private javax.swing.JLabel OpenImageLabel15;
    private javax.swing.JLabel OpenImageLabel16;
    private javax.swing.JLabel OpenImageLabel17;
    private javax.swing.JLabel OpenImageLabel18;
    private javax.swing.JLabel OpenImageLabel19;
    private javax.swing.JLabel OpenImageLabel2;
    private javax.swing.JLabel OpenImageLabel3;
    private javax.swing.JLabel OpenImageLabel4;
    private javax.swing.JLabel OpenImageLabel5;
    private javax.swing.JLabel OpenImageLabel6;
    private javax.swing.JLabel OpenImageLabel7;
    private javax.swing.JLabel OpenImageLabel8;
    private javax.swing.JLabel OpenImageLabel9;
    private javax.swing.JPanel OpenImagePanel;
    private javax.swing.JScrollPane OpenImageScrollPane;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
